import streamlit as st
import pandas as pd
import plotly.graph_objects as go
import plotly.express as px
import yfinance as yf
from utils.fetch_data import fetch_indicator

st.set_page_config(page_title="Economic Indicator Explorer", layout="wide")

st.title("üìà Economic Indicator Explorer")
st.markdown("""
Explore how major U.S. economic indicators have evolved over time.
Compare them side-by-side and overlay with market indexes like the S&P 500.
""")

INDICATORS = {
    "Consumer Price Index (CPI)": "CPIAUCSL",
    "Unemployment Rate": "UNRATE",
    "Federal Funds Rate": "FEDFUNDS",
    "GDP (Real, Annualized)": "GDPC1",
    "10-Year Treasury Rate": "GS10"
}

selected_indicators = st.sidebar.multiselect(
    "Choose Economic Indicators",
    list(INDICATORS.keys()),
    default=["Consumer Price Index (CPI)", "Unemployment Rate"]
)

start_date = st.sidebar.date_input("Start Date", pd.to_datetime("2010-01-01"))
end_date = st.sidebar.date_input("End Date", pd.to_datetime("today"))

if selected_indicators:
    all_data = pd.DataFrame()

    for name in selected_indicators:
        fred_id = INDICATORS[name]
        data = fetch_indicator(fred_id, str(start_date), str(end_date))
        all_data = pd.concat([all_data, data], axis=1)

    all_data.dropna(inplace=True)

    show_sp500 = st.sidebar.checkbox("Overlay S&P 500 (SPY)", value=True)
    sp500_data = None

    if show_sp500:
        sp500 = yf.download("^GSPC", start=start_date, end=end_date)
        sp500 = sp500["Adj Close"].rename("S&P 500")
        sp500_data = sp500.to_frame().dropna()
        all_data = pd.concat([all_data, sp500_data], axis=1).dropna()

    fig = go.Figure()
    for col in all_data.columns:
        fig.add_trace(go.Scatter(x=all_data.index, y=all_data[col], mode='lines', name=col))

    fig.update_layout(
        title="Economic Indicators Over Time",
        xaxis_title="Date",
        yaxis_title="Value",
        height=600,
        template="plotly_white"
    )

    st.plotly_chart(fig, use_container_width=True)

    if show_sp500 and sp500_data is not None:
        st.subheader("üîç Correlation with S&P 500")
        corr_df = all_data.pct_change().dropna().corr().round(2)

        fig_corr = px.imshow(
            corr_df,
            text_auto=True,
            color_continuous_scale='RdBu_r',
            title="Correlation Heatmap (Daily % Change)",
            aspect="auto"
        )
        st.plotly_chart(fig_corr, use_container_width=True)
else:
    st.warning("Please select at least one indicator from the sidebar.")
